<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ASP.Net on Meisinger Two</title><link>https://meisinger.github.io/tags/asp.net/</link><description>Recent content in ASP.Net on Meisinger Two</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 17 Jul 2008 00:00:00 +0000</lastBuildDate><atom:link href="https://meisinger.github.io/tags/asp.net/index.xml" rel="self" type="application/rss+xml"/><item><title>Handling Validation Errors in MVC (a different approach)</title><link>https://meisinger.github.io/post/2008-07-17-handling-validation-errors-in-mvc-a-different-approach/</link><pubDate>Thu, 17 Jul 2008 00:00:00 +0000</pubDate><guid>https://meisinger.github.io/post/2008-07-17-handling-validation-errors-in-mvc-a-different-approach/</guid><description>&lt;p>I just got done reading &lt;a href="http://weblogs.asp.net/scottgu/default.aspx">Scott Guthrie&lt;/a>&amp;rsquo;s and &lt;a href="http://haacked.com/">Phil Haack&amp;rsquo;s&lt;/a> posts on the
&lt;a href="http://haacked.com/archive/2008/07/16/aspnetmvc-codeplex-preview4.aspx">MVC Preview 4 release&lt;/a> and there was one little piece in the &amp;ldquo;What&amp;rsquo;s Next&amp;rdquo;
section that really peeked my interest. As it turns out the MVC guys are figuring out how to tackle the problem with handling validation errors and
reporting them back to the user. How great is that? I don&amp;rsquo;t know about you but validation errors are one of the worst things to have to deal with
when it comes to a web based application.&lt;/p></description></item><item><title>New ASP.Net MVC Source Drop</title><link>https://meisinger.github.io/post/2008-04-18-new-aspnet-mvc-source-drop/</link><pubDate>Fri, 18 Apr 2008 00:00:00 +0000</pubDate><guid>https://meisinger.github.io/post/2008-04-18-new-aspnet-mvc-source-drop/</guid><description>&lt;p>&lt;a href="http://weblogs.asp.net/scottgu/default.aspx">Scott Guthrie&lt;/a> recently posted about the
&lt;a href="http://weblogs.asp.net/scottgu/archive/2008/04/16/asp-net-mvc-source-refresh-preview.aspx">new ASP.Net MVC Source Preview&lt;/a> and I have to tell you that
I am really excited about these new bits. Not only have they added the source code for the unit tests with this release but that have added two new
features that I think are really going to make life easier.&lt;/p>
&lt;p>If you have played around with ASP.Net MVC, or have read articles covering it, you will know that one of the key features to ASP.Net MVC is the support
for unit testing in the Presentation tier. Prior to ASP.Net MVC you could perform some unit testing in the Presentation tier but often times you were
required to use a record/playback mechanism that did nothing more than record the HTTP request, store the data in some XML or other file format, and
allowed you to &amp;ldquo;replay&amp;rdquo; the scenario. More times than not, however, the amount of time and effort to test this tier was too much to make it a common everyday
task that developers would follow.&lt;/p></description></item><item><title>ASP.Net MVC Source Code Available... our first test</title><link>https://meisinger.github.io/post/2008-03-22-aspnet-mvc-source-code-available-our-first-test/</link><pubDate>Sat, 22 Mar 2008 00:00:00 +0000</pubDate><guid>https://meisinger.github.io/post/2008-03-22-aspnet-mvc-source-code-available-our-first-test/</guid><description>&lt;p>&lt;a href="http://weblogs.asp.net/scottgu/">Scott Guthrie&lt;/a> recently posted an article about the
&lt;a href="http://weblogs.asp.net/scottgu/archive/2008/03/21/asp-net-mvc-source-code-now-available.aspx">ASP.Net MVC Source Code&lt;/a> becoming available from the CodePlex website.&lt;/p>
&lt;p>I think that this a huge step in the right direction. I would even go as far as saying that this &amp;ldquo;move&amp;rdquo; was intentional.
If you take a minute and think about what this means&amp;hellip; you will see what I am talking about.&lt;/p>
&lt;p>With the source code to the MVC library being made available&amp;hellip; it is almost like we as developers are being tested.
Will we take the source code and make it our own? Will we report back defects and enhancements back to Microsoft to improve this feature?
Will we open it up and try to break it and find flaws in the underlying code?&lt;/p></description></item></channel></rss>